<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[电脑]]></title>
  <link href="http://nanliu.github.com/atom.xml" rel="self"/>
  <link href="http://nanliu.github.com/"/>
  <updated>2013-02-28T08:45:02-08:00</updated>
  <id>http://nanliu.github.com/</id>
  <author>
    <name><![CDATA[Nan Liu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Puppet Managing vCenter and vShield]]></title>
    <link href="http://nanliu.github.com/blog/2013/02/27/puppet-managing-vcenter-and-vshield/"/>
    <updated>2013-02-27T08:00:00-08:00</updated>
    <id>http://nanliu.github.com/blog/2013/02/27/puppet-managing-vcenter-and-vshield</id>
    <content type="html"><![CDATA[<p>Today, we released a set of <a href="https://github.com/vmware/">open source Puppet modules</a> for managing <a href="http://www.vmware.com/products/vcenter-server/overview.html">vCenter</a> Server Appliance 5.1 and <a href="http://www.vmware.com/products/datacenter-virtualization/vcloud-network-security/overview.html">vCloud Network and Security</a> 5.1 (vCNS previously known as vShield). They provide a framework for managing resources within vCenter and vCNS via Puppet<sup id="fnref:fn-nick"><a href="#fn:fn-nick" rel="footnote">1</a></sup>.</p>

<p><img src="http://nanliu.github.com/images/puppet_device.png" title="'Puppet and vSphere vShield API'" /></p>

<p>The modules can be obtained from <a href="http://forge.puppetlabs.com/vmware">forge.puppetlabs.com</a>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ puppet module install vmware/vcsa
</span><span class="line">$ puppet module install vmware/vcenter
</span><span class="line">$ puppet module install vmware/vshield</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>For development use github repos which can be installed via the following librarian Puppetfile:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">mod</span> <span class="s2">&quot;puppetlabs/stdlib&quot;</span>
</span><span class="line"><span class="n">mod</span> <span class="s2">&quot;nanliu/staging&quot;</span>
</span><span class="line"><span class="n">mod</span> <span class="s2">&quot;vmware_lib&quot;</span><span class="p">,</span> <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s2">&quot;git://github.com/vmware/vmware-vmware_lib.git&quot;</span>
</span><span class="line"><span class="n">mod</span> <span class="s2">&quot;vcsa&quot;</span><span class="p">,</span>       <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s2">&quot;git://github.com/vmware/vmware-vcsa.git&quot;</span>
</span><span class="line"><span class="n">mod</span> <span class="s2">&quot;vcenter&quot;</span><span class="p">,</span>    <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s2">&quot;git://github.com/vmware/vmware-vcenter.git&quot;</span>
</span><span class="line"><span class="n">mod</span> <span class="s2">&quot;vshield&quot;</span><span class="p">,</span>    <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s2">&quot;git://github.com/vmware/vmware-vshield.git&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The puppet management host needs to have connectivity with vCenter and vCNS appliance. We are currently using a custom version of <a href="https://github.com/vmware/rbvmomi">RbVmomi</a> which has been included in the module. The management host should deploy all dependent software packages before managing any vCenter/vCNS resources:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">node</span> <span class="s1">&#39;management_server&#39;</span> <span class="p">{</span>
</span><span class="line">  <span class="kp">include</span> <span class="s1">&#39;vcenter::package&#39;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>One of the gems in the package requires nokogiri. If you use Puppet Enterprise, install the pe-rubygem-nokogiri package on the management host (it’s not typically installed for agents). See <a href="http://nokogiri.org/tutorials/installing_nokogiri.html">Nokogiri documentation</a> for additional information for open source puppet agents.</p>

<p>In last week’s <a href="http://nanliu.github.com/blog/2013/02/20/device-management-with-puppet/">sneak preview</a>, I showed the debugging output for ssh transport. For the observant readers, those commands were the steps to initialize vCenter Server Appliance<sup id="fnref:fn-will"><a href="#fn:fn-will" rel="footnote">2</a></sup>:</p>

<p><img src="http://nanliu.github.com/images/vcsa_ssh.png" title="'vCenter Server Appliance initialization'" /></p>

<p>This is the corresponding Puppet manifests<sup id="fnref:fn-import"><a href="#fn:fn-import" rel="footnote">3</a></sup>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">vcsa</span> <span class="p">{</span> <span class="s1">&#39;demo&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="n">username</span> <span class="o">=&gt;</span> <span class="s1">&#39;root&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">password</span> <span class="o">=&gt;</span> <span class="s1">&#39;vmware&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">server</span>   <span class="o">=&gt;</span> <span class="s1">&#39;192.168.1.10&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">db_type</span>  <span class="o">=&gt;</span> <span class="s1">&#39;embedded&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">capacity</span> <span class="o">=&gt;</span> <span class="s1">&#39;m&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>If we dig into the define resources type, it simply passes the user account to the ssh transport and initialize the device in the appropriate sequence:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">define</span> <span class="n">vcsa</span> <span class="p">(</span>
</span><span class="line"><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class="line"><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="n">transport</span> <span class="p">{</span> <span class="vg">$name</span><span class="p">:</span>
</span><span class="line">    <span class="n">username</span> <span class="o">=&gt;</span> <span class="vg">$username</span><span class="p">,</span>
</span><span class="line">    <span class="n">password</span> <span class="o">=&gt;</span> <span class="vg">$password</span><span class="p">,</span>
</span><span class="line">    <span class="n">server</span>   <span class="o">=&gt;</span> <span class="vg">$server</span><span class="p">,</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="n">vcsa_eula</span> <span class="p">{</span> <span class="vg">$name</span><span class="p">:</span>
</span><span class="line">    <span class="k">ensure</span>    <span class="o">=&gt;</span> <span class="n">accept</span><span class="p">,</span>
</span><span class="line">    <span class="n">transport</span> <span class="o">=&gt;</span> <span class="no">Transport</span><span class="o">[</span><span class="vg">$name</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">  <span class="p">}</span> <span class="o">-&gt;</span>
</span><span class="line">
</span><span class="line">  <span class="n">vcsa_db</span> <span class="p">{</span> <span class="vg">$name</span><span class="p">:</span>
</span><span class="line">    <span class="k">ensure</span>    <span class="o">=&gt;</span> <span class="n">present</span><span class="p">,</span>
</span><span class="line">    <span class="n">type</span>      <span class="o">=&gt;</span> <span class="vg">$db_type</span>
</span><span class="line">  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Once vCenter Server appliance is initialized we can manage vCenter resources using the vSphere API. The example below specifies a vSphere API transport, along with datacenter, cluster, and an ESX host<sup id="fnref:fn-windows"><a href="#fn:fn-windows" rel="footnote">4</a></sup>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">transport</span> <span class="p">{</span> <span class="s1">&#39;vcenter&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="n">username</span> <span class="o">=&gt;</span> <span class="s1">&#39;root&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">password</span> <span class="o">=&gt;</span> <span class="s1">&#39;vmware&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">server</span>   <span class="o">=&gt;</span> <span class="s1">&#39;192.168.1.10&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="c1"># see rbvmomi documentation for available options:</span>
</span><span class="line">  <span class="n">options</span>  <span class="o">=&gt;</span> <span class="p">{</span> <span class="s1">&#39;insecure&#39;</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">},</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">vc_datacenter</span> <span class="p">{</span> <span class="s1">&#39;dc1&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="k">ensure</span>    <span class="o">=&gt;</span> <span class="n">present</span><span class="p">,</span>
</span><span class="line">  <span class="n">path</span>      <span class="o">=&gt;</span> <span class="s1">&#39;/dc1&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">transport</span> <span class="o">=&gt;</span> <span class="no">Transport</span><span class="o">[</span><span class="s1">&#39;vcenter&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">vc_cluster</span> <span class="p">{</span> <span class="s1">&#39;/dc1/clu1&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="k">ensure</span>    <span class="o">=&gt;</span> <span class="n">present</span><span class="p">,</span>
</span><span class="line">  <span class="n">transport</span> <span class="o">=&gt;</span> <span class="no">Transport</span><span class="o">[</span><span class="s1">&#39;vcenter&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">vc_cluster_drs</span> <span class="p">{</span> <span class="s1">&#39;/dc1/clu1&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="nb">require</span>   <span class="o">=&gt;</span> <span class="no">Vc_cluster</span><span class="o">[</span><span class="s1">&#39;/dc1/clu1&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">  <span class="n">before</span>    <span class="o">=&gt;</span> <span class="no">Anchor</span><span class="o">[</span><span class="s1">&#39;/dc1/clu1&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">  <span class="n">transport</span> <span class="o">=&gt;</span> <span class="no">Transport</span><span class="o">[</span><span class="s1">&#39;vcenter&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">vc_cluster_evc</span> <span class="p">{</span> <span class="s1">&#39;/dc1/clu1&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="nb">require</span>   <span class="o">=&gt;</span> <span class="o">[</span>
</span><span class="line">    <span class="no">Vc_cluster</span><span class="o">[</span><span class="s1">&#39;/dc1/clu1&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="no">Vc_cluster_drs</span><span class="o">[</span><span class="s1">&#39;/dc1/clu1&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">  <span class="o">]</span><span class="p">,</span>
</span><span class="line">  <span class="n">before</span>    <span class="o">=&gt;</span> <span class="no">Anchor</span><span class="o">[</span><span class="s1">&#39;/dc1/clu1&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">  <span class="n">transport</span> <span class="o">=&gt;</span> <span class="no">Transport</span><span class="o">[</span><span class="s1">&#39;vcenter&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">anchor</span> <span class="p">{</span> <span class="s1">&#39;/dc1/clu1&#39;</span><span class="p">:</span> <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="ss">vcenter</span><span class="p">:</span><span class="ss">:host</span> <span class="p">{</span> <span class="s1">&#39;esx1&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="n">path</span>      <span class="o">=&gt;</span> <span class="s1">&#39;/dc1/clu1&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">username</span>  <span class="o">=&gt;</span> <span class="s1">&#39;root&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">password</span>  <span class="o">=&gt;</span> <span class="s1">&#39;esx_password&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">dateTimeConfig</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">    <span class="s1">&#39;ntpConfig&#39;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">      <span class="s1">&#39;server&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;us.ntp.pool.org&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">    <span class="s1">&#39;timeZone&#39;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">      <span class="s1">&#39;key&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;UTC&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="n">transport</span> <span class="o">=&gt;</span> <span class="no">Transport</span><span class="o">[</span><span class="s1">&#39;vcenter&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The next task is to connect vCloud Network and Security appliance to a vCenter appliance to form a cell:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">transport</span> <span class="p">{</span> <span class="s1">&#39;vshield&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="n">username</span> <span class="o">=&gt;</span> <span class="s1">&#39;admin&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">password</span> <span class="o">=&gt;</span> <span class="s1">&#39;default&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">server</span>   <span class="o">=&gt;</span> <span class="s1">&#39;192.168.1.11&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">vshield_global_config</span> <span class="p">{</span> <span class="vg">$vshield</span><span class="o">[</span><span class="s1">&#39;server&#39;</span><span class="o">]</span><span class="p">:</span>
</span><span class="line">  <span class="n">vc_info</span>   <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">    <span class="n">ip_address</span> <span class="o">=&gt;</span> <span class="s1">&#39;192.168.1.10&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">user_name</span>  <span class="o">=&gt;</span> <span class="s1">&#39;admin&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">password</span>   <span class="o">=&gt;</span> <span class="s1">&#39;default&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="n">time_info</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="s1">&#39;ntp_server&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;us.pool.ntp.org&#39;</span> <span class="p">},</span>
</span><span class="line">  <span class="n">dns_info</span>  <span class="o">=&gt;</span> <span class="p">{</span> <span class="s1">&#39;primary_dns&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;8.8.8.8&#39;</span> <span class="p">},</span>
</span><span class="line">  <span class="n">transport</span> <span class="o">=&gt;</span> <span class="no">Transport</span><span class="o">[</span><span class="s1">&#39;vshield&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>In vShield API, all vCenter resources are referred by the <a href="http://kb.vmware.com/kb/1017126">vSphere Managed Object Reference (MoRef)</a>. ‘esx-13’ might be understandable to a computer, but for configuration purpose the name of the ESX host would make much more sense to an admin. For this reason, we developed the transport resource to support multiple connectivity during a single puppet execution:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">transport</span> <span class="p">{</span> <span class="s1">&#39;vcenter&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="n">username</span> <span class="o">=&gt;</span> <span class="s1">&#39;root&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">password</span> <span class="o">=&gt;</span> <span class="s1">&#39;vmware&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">server</span>   <span class="o">=&gt;</span> <span class="s1">&#39;192.168.1.10&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">options</span>  <span class="o">=&gt;</span> <span class="p">{</span> <span class="s1">&#39;insecure&#39;</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">},</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">transport</span> <span class="p">{</span> <span class="s1">&#39;vshield&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="n">username</span> <span class="o">=&gt;</span> <span class="s1">&#39;admin&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">password</span> <span class="o">=&gt;</span> <span class="s1">&#39;default&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">server</span>   <span class="o">=&gt;</span> <span class="s1">&#39;192.168.1.11&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">vshield_edge</span> <span class="p">{</span> <span class="s1">&#39;192.168.1.11:dmz&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="k">ensure</span>             <span class="o">=&gt;</span> <span class="n">present</span><span class="p">,</span>
</span><span class="line">  <span class="n">datacenter_name</span>    <span class="o">=&gt;</span> <span class="s1">&#39;dc1&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">resource_pool_name</span> <span class="o">=&gt;</span> <span class="s1">&#39;clu1&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">enable_aesni</span>       <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class="line">  <span class="n">enable_fips</span>        <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class="line">  <span class="n">enable_tcp_loose</span>   <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class="line">  <span class="n">vse_log_level</span>      <span class="o">=&gt;</span> <span class="s1">&#39;info&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">fqdn</span>               <span class="o">=&gt;</span> <span class="s1">&#39;dmz.vm&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">vnics</span>              <span class="o">=&gt;</span> <span class="o">[</span>
</span><span class="line">    <span class="p">{</span> <span class="nb">name</span>          <span class="o">=&gt;</span> <span class="s1">&#39;uplink-test&#39;</span><span class="p">,</span>
</span><span class="line">      <span class="n">portgroupName</span> <span class="o">=&gt;</span> <span class="s1">&#39;VM Network&#39;</span><span class="p">,</span>
</span><span class="line">      <span class="n">type</span>          <span class="o">=&gt;</span> <span class="s2">&quot;Uplink&quot;</span><span class="p">,</span>
</span><span class="line">      <span class="n">isConnected</span>   <span class="o">=&gt;</span> <span class="s2">&quot;true&quot;</span><span class="p">,</span>
</span><span class="line">      <span class="n">addressGroups</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">        <span class="s2">&quot;addressGroup&quot;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">          <span class="s2">&quot;primaryAddress&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;192.168.2.1&quot;</span><span class="p">,</span>
</span><span class="line">          <span class="s2">&quot;subnetMask&quot;</span>     <span class="o">=&gt;</span> <span class="s2">&quot;255.255.255.128&quot;</span><span class="p">,</span>
</span><span class="line">        <span class="p">},</span>
</span><span class="line">      <span class="p">},</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">  <span class="o">]</span><span class="p">,</span>
</span><span class="line">  <span class="n">transport</span>  <span class="o">=&gt;</span> <span class="no">Transport</span><span class="o">[</span><span class="s1">&#39;vshield&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>This should a provide general overview for the module capabilities. Additional resources are available beyond what’s covered in this post, however some of them such as vc_vm are not operational yet, and currently the modules do not offer comprehensive coverage of the vSphere and vShield API. I hope other users will find this module useful for your environment.</p>

<p>Thanks again for the support from R&amp;D team at VMware, and especially Randy Brown and Shawn Holland for contributing the vCenter and vShield module. Also thanks to Rich Lane for releasing RbVmomi, and support from Christian Dickmann for resolving an issue in that library.</p>

<h3 id="reference">Reference:</h3>

<p>VMware github repository:</p>

<ul>
  <li><a href="https://github.com/vmware/vmware-vmware_lib">vmare_lib</a></li>
  <li><a href="https://github.com/vmware/vmware-vcsa">vcsa</a></li>
  <li><a href="https://github.com/vmware/vmware-vcenter">vcenter</a></li>
  <li><a href="https://github.com/vmware/vmware-vshield">vshield</a></li>
</ul>

<p>Video walkthrough:</p>

<div class="embed-video-container"><iframe src="http://player.vimeo.com/video/60628331 "></iframe></div>

<div class="footnotes">
  <ol>
    <li id="fn:fn-nick">
      <p>See <a href="http://nickapedia.com/2013/02/27/vmware-puppet-one-more-step-forward">Nick’s blog post</a> for more info.<a href="#fnref:fn-nick" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:fn-will">
      <p>Thanks to <a href="http://www.virtuallyghetto.com/2012/02/automating-vcenter-server-appliance.html">Will Lam’s post on vCenter appliance</a>.<a href="#fnref:fn-will" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:fn-import">
      <p>In the module test manifests “import ‘data.pp’” is a pattern to simplify testing for developers in different environments, please do not use import function for your production puppet manifests.<a href="#fnref:fn-import" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:fn-windows">
      <p>Also the resources should work against a vCenter installation on Windows, however it hasn’t been tested.<a href="#fnref:fn-windows" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Device Management with Puppet]]></title>
    <link href="http://nanliu.github.com/blog/2013/02/20/device-management-with-puppet/"/>
    <updated>2013-02-20T17:14:00-08:00</updated>
    <id>http://nanliu.github.com/blog/2013/02/20/device-management-with-puppet</id>
    <content type="html"><![CDATA[<p>In Puppet 2.7, one of the new features added was device management. In this initial release, only a small number of Cisco switches were supported. Overall the capabilities weren’t really significant, however the concept shifted people’s perception of the boundaries for configuration management. All of sudden Puppet didn’t end at the operating system, and extended to black boxes that were previously thought to be a bridge too far.</p>

<p><img src="http://nanliu.github.com/images/inception_dream.gif" title="'dream big'" /></p>

<p>This slowly spawned a flurry of activities exploring network devices, load-balancers, and storage:</p>

<ul>
  <li><a href="http://www.juniper.net/techpubs/en_US/junos-puppet0.8/topics/concept/automation-junos-puppet-overview.html">Juniper</a><sup id="fnref:fn-juniper"><a href="#fn:fn-juniper" rel="footnote">1</a></sup>: <a href="https://forge.puppetlabs.com/jeremyschulman/netdev">puppet-netdev</a></li>
  <li><a href="https://devcentral.f5.com/blogs/us/f5-friday-how-to-stop-running-the-project-gauntlet-of-doom-with-devops">F5 Big-IP</a>: <a href="https://forge.puppetlabs.com/puppetlabs/f5">puppetlabs-f5</a></li>
  <li><a href="https://github.com/fatmcgav/fatmcgav-netapp">Net App</a>: <a href="http://forge.puppetlabs.com/fatmcgav/netapp">fatmcgav-netapp</a></li>
</ul>

<p>The benefits of having the entire infrastructure automated with a single tool chain under version control is indisputable. A Software Define Data Center is not complete until you gap the management capabilities whether it’s your network or storage. With that said, there’s still some limitations with puppet device. Currently, the device command only supports communication with a single device at a time. This is fine when the device is self contained, but in some instances it’s necessary to interact with a series of devices to perform a meaningful task. For this reason, we developed transport resource to support multiple connectivity for a single puppet execution. This is not a substitution for orchestration of a chain of events, but rather to group resources that have interactions between different devices:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">transport</span> <span class="p">{</span> <span class="s1">&#39;ssh&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="n">username</span> <span class="o">=&gt;</span> <span class="s1">&#39;root&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">password</span> <span class="o">=&gt;</span> <span class="s1">&#39;p@ss&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">server</span>   <span class="o">=&gt;</span> <span class="s1">&#39;192.168.1.10&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="c1"># support connection options in net::ssh :</span>
</span><span class="line">  <span class="n">options</span>  <span class="o">=&gt;</span> <span class="p">{</span> <span class="s1">&#39;port&#39;</span> <span class="o">=&gt;</span> <span class="mi">10022</span> <span class="p">},</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">transport</span> <span class="p">{</span> <span class="s1">&#39;rest&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="n">username</span> <span class="o">=&gt;</span> <span class="s1">&#39;admin&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">password</span> <span class="o">=&gt;</span> <span class="s1">&#39;secret!&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="n">server</span>   <span class="o">=&gt;</span> <span class="s1">&#39;192.168.1.11&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>A transport is shared and reused across several resources, and custom type/provider can leverage any transport connectivity:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1"># this is a mockup</span>
</span><span class="line"><span class="n">remote_service</span> <span class="p">{</span> <span class="s1">&#39;ntp&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="k">ensure</span>    <span class="o">=&gt;</span> <span class="n">running</span><span class="p">,</span>
</span><span class="line">  <span class="n">transport</span> <span class="o">=&gt;</span> <span class="no">Transport</span><span class="o">[</span><span class="s1">&#39;ssh&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Here’s an example debug output showing ssh connectivity established and reused for 192.168.1.10 to perform a series of activity.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
</pre></td><td class="code"><pre><code class="console"><span class="line"><span class="go">debug: PuppetX::Puppetlabs::Transport::Ssh initializing connection to: 192.168.1.10</span>
</span><span class="line"><span class="go">debug: Executing on 192.168.1.10:</span>
</span><span class="line"><span class="go">vpxd_servicecfg eula read</span>
</span><span class="line"><span class="go">debug: Execution result:</span>
</span><span class="line"><span class="go">VC_EULA_STATUS=1</span>
</span><span class="line"><span class="go">VC_CFG_RESULT=0</span>
</span><span class="line">
</span><span class="line"><span class="go">debug: Executing on 192.168.1.10:</span>
</span><span class="line"><span class="go">vpxd_servicecfg db read</span>
</span><span class="line"><span class="go">debug: Execution result:</span>
</span><span class="line"><span class="go">VC_DB_TYPE=embedded</span>
</span><span class="line"><span class="go">VC_DB_SERVER=</span>
</span><span class="line"><span class="go">VC_DB_SERVER_PORT=</span>
</span><span class="line"><span class="go">VC_DB_INSTANCE=</span>
</span><span class="line"><span class="go">VC_DB_USER=</span>
</span><span class="line"><span class="go">VC_DB_SCHEMA_VERSION=</span>
</span><span class="line"><span class="go">VC_CFG_RESULT=0</span>
</span><span class="line">
</span><span class="line"><span class="go">debug: Executing on 192.168.1.10:</span>
</span><span class="line"><span class="go">vpxd_servicecfg sso read</span>
</span><span class="line"><span class="go">debug: Execution result:</span>
</span><span class="line"><span class="go">SSO_TYPE=embedded</span>
</span><span class="line"><span class="go">SSO_LS_LOCATION=https://192.168.1.10:7444/lookupservice/sdk</span>
</span><span class="line"><span class="go">SSO_DB_TYPE=embedded</span>
</span><span class="line"><span class="go">SSO_DB_SERVER=localhost</span>
</span><span class="line"><span class="go">SSO_DB_SERVER_PORT=5432</span>
</span><span class="line"><span class="go">SSO_DB_INSTANCE=ssodb</span>
</span><span class="line"><span class="go">SSO_DB_USER=ssod</span>
</span><span class="line"><span class="go">SSO_DB_PASSWORD=</span>
</span><span class="line"><span class="go">VC_CFG_RESULT=0</span>
</span><span class="line">
</span><span class="line"><span class="go">debug: Executing on 192.168.1.10:</span>
</span><span class="line"><span class="go">vpxd_servicecfg service status</span>
</span><span class="line"><span class="go">debug: Execution result:</span>
</span><span class="line"><span class="go">VC_SERVICE_STATUS=1</span>
</span><span class="line"><span class="go">VC_CFG_RESULT=0</span>
</span><span class="line">
</span><span class="line"><span class="go">debug: Finishing transaction 2205823080</span>
</span><span class="line"><span class="go">debug: Closing PuppetX::Puppetlabs::Transport::Ssh connection to: 192.168.1.10</span>
</span><span class="line"><span class="go">debug: Storing state</span>
</span><span class="line"><span class="go">debug: Stored state in 0.07 seconds</span>
</span><span class="line"><span class="go">notice: Finished catalog run in 2.90 seconds</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>In the example above, a single ssh connection was established at the beginning, and closed at the end of the session. This was one of the roadblock <a href="https://twitter.com/nwkautomaniac">Jeremy Schulman</a> brought up when developing network devices NETCONF sessions. Originally I suggested a resource responsible for closing the connections that had automatic dependencies to the correct network resources since there was no API to do this in the provider<sup id="fnref:fn-tickets"><a href="#fn:fn-tickets" rel="footnote">2</a></sup>. However this doesn’t take in consideration for resources failures which results in dangling open connections. Ultimately, I went back to Puppet::Transaction and added the connection cleanup at the end of evaluate method:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">module</span> <span class="nn">Puppet</span>
</span><span class="line">  <span class="k">class</span> <span class="nc">Transaction</span>
</span><span class="line">    <span class="n">alias_method</span> <span class="ss">:evaluate_original</span><span class="p">,</span> <span class="ss">:evaluate</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">evaluate</span>
</span><span class="line">      <span class="n">evaluate_original</span>
</span><span class="line">      <span class="ss">PuppetX</span><span class="p">:</span><span class="ss">:Puppetlabs</span><span class="o">::</span><span class="no">Transport</span><span class="o">.</span><span class="n">cleanup</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>This isn’t the cleanest solution, since it monkey patches Puppet’s internal, and does not trap user termination of Puppet, but it is more reliable then depending on every resource succeeding. Thanks again to Jeremy’s original work with transaction.rb which led me down this path. For now this is a work around, while we wait for Puppet Labs come up with a formal solution to <a href="http://projects.puppetlabs.com/issues/3946">#3946</a>.</p>

<p>Next week at <a href="http://communities.vmware.com/community/vmtn/partner-exchange">VMware Partners Exchange</a> (PEX 2013), <a href="http://nickapedia.com/2013/02/01/stuff-to-see-puppet-pex-and-more/">Nick Weaver</a> and Carl Caum will present more about Puppet and how it works with VMware Products at session VPN1298. This is just a sneak preview, so please attend to get the complete picture. Stay tuned, and I will provide more technical details about what we are using Puppet for next week after the PEX announcement.</p>

<div class="footnotes">
  <ol>
    <li id="fn:fn-juniper">
      <p>Juniper has gone as far as embedding Puppet agent to the device.<a href="#fnref:fn-juniper" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:fn-tickets">
      <p>See <a href="http://projects.puppetlabs.com/issues/3946">#3946</a>. Work on Puppet long enough, you’ll find tickets indicating Dan has explored these dark corners before anyone else.<a href="#fnref:fn-tickets" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating to Puppet 3.x]]></title>
    <link href="http://nanliu.github.com/blog/2013/02/08/migrating-to-puppet-3-dot-x/"/>
    <updated>2013-02-08T01:52:00-08:00</updated>
    <id>http://nanliu.github.com/blog/2013/02/08/migrating-to-puppet-3-dot-x</id>
    <content type="html"><![CDATA[<p>I am a bit late to the Puppet 3.0 party, since 3.1 have been released recently<sup id="fnref:fn-semver"><a href="#fn:fn-semver" rel="footnote">1</a></sup>. After reading the <a href="http://docs.puppetlabs.com/puppet/3/reference/release_notes.html">release notes</a> and <a href="http://somethingsinistral.net/blog/the-angry-guide-to-puppet-3/">“The Angry Guide to Puppet 3”</a>, I thought most of the upgrade issues have been covered, but there was still a small surprise when it comes to types and providers.</p>

<p>The <a href="http://docs.puppetlabs.com/puppet/3/reference/release_notes.html#exec">Exec resource</a> had a small behavior change noted as: “Due to misleading values, the HOME and USER environment variables are now unset when running commands.”</p>

<p>The impact is a bit more significant than updating Exec resource since it also affects commands declared in providers. If the invoked command depends on the HOME environment variables such as brew, it will fail in Puppet 3:</p>

<pre><code>Error: /Stage[main]//Package[rbenv]:
Could not evaluate: Could not list packages:
Execution of '/usr/local/bin/brew list --versions rbenv' returned 1:
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/pathname.rb:853:in `expand_path':
couldn't find HOME environment -- expanding `~/Library/Caches/Homebrew' (ArgumentError)
from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/pathname.rb:853:in `expand_path'
from /usr/local/Library/Homebrew/global.rb:22:in `cache'
from /usr/local/Library/Homebrew/global.rb:41
from /usr/local/bin/brew:17:in `require'
from /usr/local/bin/brew:17
</code></pre>

<p>The solution is described in <a href="http://projects.puppetlabs.com/issues/16779">#16779</a>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Setting command environment variables</span><a href="http://projects.puppetlabs.com/issues/16779">16779 </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">has_command</span><span class="p">(</span><span class="ss">:brew</span><span class="p">,</span> <span class="s1">&#39;brew&#39;</span><span class="p">)</span> <span class="k">do</span>
</span><span class="line">  <span class="n">environment</span><span class="p">({</span> <span class="s1">&#39;HOME&#39;</span> <span class="o">=&gt;</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;HOME&#39;</span><span class="o">]</span> <span class="p">})</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The method ‘has_command’ is not backwards compatible with Puppet 2.x, so we need to wrap it around some version check:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">if</span> <span class="ss">Puppet</span><span class="p">:</span><span class="ss">:Util</span><span class="o">::</span><span class="no">Package</span><span class="o">.</span><span class="n">versioncmp</span><span class="p">(</span><span class="no">Puppet</span><span class="o">.</span><span class="n">version</span><span class="p">,</span> <span class="s1">&#39;3.0&#39;</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">0</span>
</span><span class="line">  <span class="n">has_command</span><span class="p">(</span><span class="ss">:brew</span><span class="p">,</span> <span class="s2">&quot;/usr/local/bin/brew&quot;</span><span class="p">)</span> <span class="k">do</span>
</span><span class="line">    <span class="n">environment</span><span class="p">({</span> <span class="s1">&#39;HOME&#39;</span> <span class="o">=&gt;</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;HOME&#39;</span><span class="o">]</span> <span class="p">})</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">else</span>
</span><span class="line">  <span class="n">commands</span> <span class="ss">:brew</span> <span class="o">=&gt;</span> <span class="s2">&quot;/usr/local/bin/brew&quot;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">brew</span><span class="p">(</span><span class="s1">&#39;list&#39;</span><span class="p">,</span> <span class="s1">&#39;--versions&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>This also means execute will strip these two environment variables as well, so commands pass :custom_environment to preserve this value. execute is less common, and don’t use it unless you need special behavior such as :failonfail =&gt; false:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">execute</span><span class="p">(</span><span class="o">[</span><span class="n">command</span><span class="p">(</span><span class="ss">:brew</span><span class="p">),</span> <span class="s1">&#39;list&#39;</span><span class="p">,</span> <span class="s1">&#39;--version&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">:custom_environment</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="s1">&#39;HOME&#39;</span><span class="o">=&gt;</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;HOME&#39;</span><span class="o">]</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Hope this is helpful for anyone else who stumbles into this issue.</p>

<div class="footnotes">
  <ol>
    <li id="fn:fn-semver">
      <p>The proliferation of versions might be alarming, but it’s due to stricter adherence to semantic versioning. The changes 3.0 3.1 is closer to 2.7.0 to 2.7.1 than 2.6 to 2.7.<a href="#fnref:fn-semver" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Year: Reboot]]></title>
    <link href="http://nanliu.github.com/blog/2013/01/02/new-year-reboot/"/>
    <updated>2013-01-02T20:59:00-08:00</updated>
    <id>http://nanliu.github.com/blog/2013/01/02/new-year-reboot</id>
    <content type="html"><![CDATA[<p>For the last two and half year, I lived, breathed, and spent my waking hours thinking about Puppet. In a blink of an eye Puppet Labs is no longer the 12 person startup above Old Town Pizza shop<sup id="fnref:fn-pizza"><a href="#fn:fn-pizza" rel="footnote">1</a></sup> or more infamously, above the start of the Shanghai Tunnel <sup id="fnref:fn-shanghai"><a href="#fn:fn-shanghai" rel="footnote">2</a></sup> in China Town. </p>

<p><img src="http://nanliu.github.com/images/reductive.jpg" title="'Seriously, this was it.'" /></p>

<p>The company can probably can start shedding the term startup, since it’s 10x the size, closed a third round investment, and finished their third office move to the Pearl district.</p>

<p>Looking back, I still pinch myself for even getting the opportunity to be in Portland since I started the job knowing little about the software. I’m still amused by the interview with the other candidate in the same room that felt like a reality TV show<sup id="fnref:fn-interview"><a href="#fn:fn-interview" rel="footnote">3</a></sup>. Fast forward 200,000 miles around the world later and I’m finally feeling comfortable using and talking about Puppet. It’s been an incredible ride, and more important I’ve been lucky to work with some of the brightest people I know. If you enjoy solving infrastructure problems, <a href="http://www.jobscore.com/jobs/puppetlabs">apply and have a blast</a>.</p>

<p>It’s a New Year, and I’m sad it’s time for a reboot and I’ve left Puppet Labs to join VMware as a Sr. Systems Engineer under R&amp;D. As usual a new shiny problem has presented itself and I’m diving head first into the unknown.</p>

<p>However I’m not saying goodbye to the Puppet community. A glimps of what’s to come should be announced at <a href="http://communities.vmware.com/community/vmtn/partner-exchange">VMware Partners Exchange 2013</a>. Here’s to 2013.</p>

<div class="footnotes">
  <ol>
    <li id="fn:fn-pizza">
      <p><a href="http://www.oldtownpizza.com/">www.oldtownpizza.com</a> + Stumptown Coffee = Startup Fuel.<a href="#fnref:fn-pizza" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:fn-shanghai">
      <p>I thought it was a joke at first too: <a href="http://www.shanghaitunnels.info/">http://www.shanghaitunnels.info</a><a href="#fnref:fn-shanghai" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:fn-interview">
      <p>Story for another time, best told by Dan. Thankfully they didn’t maintain this medieval practice of jousting between candidates.<a href="#fnref:fn-interview" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[From Typhoon to Computers]]></title>
    <link href="http://nanliu.github.com/blog/2013/01/01/from-typhoon-to-computers/"/>
    <updated>2013-01-01T10:21:00-08:00</updated>
    <id>http://nanliu.github.com/blog/2013/01/01/from-typhoon-to-computers</id>
    <content type="html"><![CDATA[<p>Translations tend to have this weird effect of imbuing additional meanings the original language didn’t intend to contain<sup id="fnref:fn-ted"><a href="#fn:fn-ted" rel="footnote">1</a></sup>. One of the possible origins for the word Typhoon is the Chinese pronunciation of “East Wind”(东风) <sup id="fnref:fn-jstor"><a href="#fn:fn-jstor" rel="footnote">2</a></sup>. Interestingly enough, the word has been imported back to Chinese phonetically as “Typhoon”(台风) with a completely different meaning than the original word east wind.</p>

<p>There’s two translations of the word computers in Chinese: “计算机” and “电脑”. If we go through the typhoon exercise and translate them back to English. The first, “Computing Machine”, is not far off from the original meaning, but the second, “Electronic Brain”, seems far more imaginative; especially compared to what computer systems were able to achieve when these words were first translated.</p>

<p>When I started working on computers, machines were simply waiting for the next human instruction, the tools for managing them doesn’t really mask the rather tedious task. </p>

<p><img src="http://imgs.xkcd.com/comics/tar.png" title="'tar -xvf'" /></p>

<p>However with latest generation of configuration management software, I finally feel like we started building solutions to tackle the automation problem in a fundamental way. Similar to the insight in Stephen Wolfram’s book “A New Kind of Science”, complexity can be derive from simple rules, the inverse also appears be true: “complex systems can be managed with simple tools following basic rules chained together”.</p>

<p><img src="http://nanliu.github.com/images/wolfram.png" title="'Wolfram substitution systems models growth of plants'" /></p>

<p>We are certainly nowhere near having all the right building blocks for deploying and managing self healing infrastructure, but it’s a great aspiration to build better automation and be one small step closer towards the “Electronic Brain”. </p>

<div class="footnotes">
  <ol>
    <li id="fn:fn-ted">
      <p>Languages definitely <a href="http://www.ted.com/talks/keith_chen_could_your_language_affect_your_ability_to_save_money.html">influences thinking process</a><a href="#fnref:fn-ted" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:fn-jstor">
      <p><a href="www.jstor.org/stable/1798728">www.jstor.org/stable/1798728</a><a href="#fnref:fn-jstor" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>
